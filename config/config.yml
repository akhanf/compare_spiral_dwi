
snakebatch: #config file for snakebatch here:
  datasets:
    7t: 
      bids_dir: '/cifs/khan/users/alik/7t_fatsat_dwi/bids'



  #this configures the pybids grabber - create an entry for each type of input you want to grab
  # indexed by name of input
  #   dictionary for each input is passed directly to pybids get()
  #    https://bids-standard.github.io/pybids/generated/bids.layout.BIDSLayout.html#bids.layout.BIDSLayout.get

  defaults:

    pybids_inputs:  #can be overriden in the dataset
      dwi:
        filters:
          suffix: 'dwi'
          extension: '.nii.gz'
          datatype: 'dwi'
        wildcards:
          - subject
          - session
          - acquisition
          - run
          - direction
      t1:
        filters:
          suffix: 'T1w'
          extension: '.nii.gz'
          datatype: 'anat'
        wildcards:
          - subject
          - session
          - acquisition
          - run


    #this configures the options to save the BIDSLayout
    # by default, database is not saved (uncomment to save)
    # NOTE: pybids_db_dir must be an absolute path
    # pybids_db_dir: '/path/to/db_dir' # Leave blank if you do not wish to use this
    # pybids_db_reset: False # Change this to true to update the database


    derivatives: False #will search in bids/derivatives if True; can also be path(s) to derivatives datasets - can be overriden in datasets

    singularity_prefix: '/cifs/khan/shared/containers/snakemake_containers'

    resources:  # can be overriden in apps
      cores: 8
      mem_mb: 32000
      runtime: 360 
      tmpdir: /tmp
      gpus: 0

    tmpdir_env: SLURM_TMPDIR  
    shadow: 'minimal'




  # app options below:

  apps:
    snakedwi:
      snakebids: True
      url: 'http://github.com/akhanf/snakedwi'
      tag: 'master' #'v0.2.0-alpha'
      runscript: 'snakedwi/run.py' #relative to the app repo
      opts: ''
      retain_subj_dirs_from:
        - 'snakedwi'
      input_to_filter: dwi #e.g. for --filter-dw
      singularity_opts: '--nv'
      resources:
        cores: 8
        mem_mb: 32000
        runtime: 360 
        gpus: 1
    
   
    snakeanat:
      snakebids: True
      url: 'http://github.com/akhanf/snakeanat'
      tag: 'akhanf-patch-1'
      runscript: 'snakeanat/run.py' #relative to the app repo
      opts: '--use-envmodules --set-threads fastsurfer_seg=4 --keep-incomplete'
      retain_subj_dirs_from:
        - ''
        - 'sourcedata/ciftify'
        - 'sourcedata/fastsurfer'
        - 'sourcedata/fastsurfer_surf'
        - 'qc'
      input_to_filter: t1 #e.g. for --filter-dwi
      resources:
        cores: 8
        mem_mb: 16000
        runtime: 720
        gpus: 0


    


in_root: '$HOME/graham' #for cbs server
#in_root: '/home/akhanf' #for graham

subsampling:
  epi:
    - shell0
    - shell1000
    - shell2000
  episubsampled:
    - shell0subsampled6
    - shell1000subsampled26
    - shell2000subsampled26
  strongfatsat:
    - shell0
    - shell1000
    - shell2000
  weakfatsatnew:
    - shell0
    - shell1000
    - shell2000
  weakfatsatold:
    - shell0
    - shell1000
    - shell2000

#to find paths below, use: unzip -l cfmm-bids/Khan/LOBE/derivatives/snakebatch_LOBE_HCP_2023_09_23.zip | less
input_path: 
  dwi_nii: 
    strongfatsat: /cifs/khan/users/alik/7t_fatsat_dwi/strongFatSat/spiral_ufa_strongFatsatTik_preproc_LTE.nii.gz
    weakfatsatnew: /cifs/khan/users/alik/7t_fatsat_dwi/weakFatSat_newRecon/spiral_ufa_weakFatsat_fatRecon_preproc_LTE.nii.gz
    weakfatsatold: /cifs/khan/users/alik/7t_fatsat_dwi/weakFatSat_oldRecon/spiral_ufa_weakFatsatTik_preproc_LTE.nii.gz
    epi: 7t/derivatives/snakedwi/snakedwi/sub-01/dwi/sub-01_desc-eddy_dwi.nii.gz
    episubsampled: 7t/derivatives/snakedwi/snakedwi/sub-01/dwi/sub-01_desc-eddy_dwi.nii.gz
    
  dwi_mask: 
    strongfatsat: /cifs/khan/users/alik/7t_fatsat_dwi/strongFatSat/brain_mask.nii.gz
    weakfatsatnew: /cifs/khan/users/alik/7t_fatsat_dwi/weakFatSat_newRecon/brain_mask.nii.gz
    weakfatsatold: /cifs/khan/users/alik/7t_fatsat_dwi/weakFatSat_oldRecon/brain_mask.nii.gz
    epi: 7t/derivatives/snakedwi/snakedwi/sub-01/dwi/sub-01_desc-brain_mask.nii.gz
    episubsampled: 7t/derivatives/snakedwi/snakedwi/sub-01/dwi/sub-01_desc-brain_mask.nii.gz

  t1_nii: '7t/derivatives/snakedwi/snakedwi/sub-{subject}/anat/sub-{subject}_desc-preproc_T1w.nii.gz'
  surf_gii_t1: '7t/derivatives/snakeanat/sourcedata/ciftify/sub-{subject}/T1w/fsaverage_LR32k/sub-{subject}.{hemi}.{surf}.32k_fs_LR.surf.gii'
  surf_gii_mni: '7t/derivatives/snakeanat/sourcedata/ciftify/sub-{subject}/MNINonLinear/fsaverage_LR32k/sub-{subject}.{hemi}.{surf}.32k_fs_LR.surf.gii'



#this is the output folder
root: results

subj_wildcards:
  subject: '{subject}'


datasets:
  - epi
  - episubsampled
  - strongfatsat
  - weakfatsatnew
  - weakfatsatold


use_test_subjects: True

test_subjects: 
 - '01'

template_surf: 'resources/tpl-fsLR/tpl-fsLR_den-32k_hemi-{hemi}_{surf}.surf.gii'

#atlases to actually use:
atlases:
  - schaefer


atlas:
  schaefer: 
    dlabel: resources/schaefer_2018/Schaefer2018_300Parcels_7Networks_order.dlabel.nii
    network_pattern: '[^_]+_[^_]+_([^_]+)' #regex to find network name within label
  mmp: 
    dlabel: resources/mmp/Q1-Q6_RelatedParcellation210.CorticalAreas_dil_Final_Final_Areas_Group_Colors.32k_fs_LR.dlabel.nii
  brainnetome: 
    dlabel: resources/brainnetome/fsaverage.BN_Atlas.32k_fs_LR_updated.dlabel.nii
dwi:

  shells: 
    - '0'
    - '1000'
    - '2000'

  lmax: 
    - '0'
    - '4'
    - '4'

  sl_count: 1000000

 
func:

  fwhm:
    - 5
  

  task:
    - rest

  parcellation:    
    do_exclude_outliers: False
    n_stdevs_exclude: 2

  correlation:
    do_fisher_z: False
  denoise:
    24HMP8PhysSpikeReg:
      clean_img_opts:
        standardize: True
        detrend: False
        low_pass: 0.08
        high_pass: 0.01
      confounds_name:
        - csf 
        - csf_derivative1 
        - csf_derivative1_power2
        - csf_power2 
      confounds_like:
        - white_matter
        - trans
        - rot
        - motion_outlier
        - steady_state_outlier


nichord:
  struc:
    edge_widthscale: 0.001
  func:
    edge_widthscale: 0.001

netplotbrain:
  struc:
    view: 'LSc'
    edge_thresholddirection: above
    edge_threshold: 100
    edge_widthscale: 0.001


  func:
    view: 'LSc'
    edge_thresholddirection: above
    edge_threshold: 0.9
    edge_widthscale: 0.3


singularity:
  mrtrix: 'docker://mrtrix3/mrtrix3:3.0.4'
  diffparc: 'docker://khanlab/diffparc-deps:v0.1.0-fix'  

