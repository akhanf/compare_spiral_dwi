import re
from snakebids import bids
from os.path import join
import pandas as pd

from snakebids import set_bids_spec

set_bids_spec("v0_0_0")


configfile: "config/config.yml"

if config["use_test_subjects"]:
    subjects = config["test_subjects"]
else:
    subjects = {
        dataset: list(
            pd.read_csv(
                f"resources/dataset-{dataset}_subjects.tsv",
                sep="\t",
                dtype={"participant_label": str},
            ).participant_label
        )
        for dataset in config['datasets']
    }



root = os.path.join(os.path.expandvars(config["root"]), "{dataset}")
in_root = os.path.expandvars(config["in_root"])


include: "rules/common.smk"
include: "rules/zipfiles.smk"
include: "rules/atlas.smk"
include: "rules/dwi.smk"
include: "rules/func.smk"
include: "rules/hippunfold.smk"
include: "rules/tabular.smk"
include: "rules/plotting.smk"

rule all_dwi_conn:
    input:
        get_dwi_conn_csv_targets(),



rule all:
    input:
        get_dwi_targets(),
        get_func_targets(),
        get_sfc_targets(),



rule all_dwi:
    input:
        get_dwi_targets(),


rule all_func:
    input:
        get_func_targets(),


rule all_sfc:
    input:
        get_sfc_targets(),


rule all_lists:
    input:
        expand("resources/dataset-{dataset}_subjects.tsv", dataset=config["datasets"]),


rule create_subject_list:
    input:
        zipfile=config["in_agg_zip"]["snakebatch"],
    output:
        "resources/dataset-{dataset}_subjects.tsv",
    shell:
        "echo participant_label > {output} && unzip -l {input} {wildcards.dataset}/bids/sub-*/*T1w.nii.gz | awk '{{print $4}}' | awk -F '/' '{{print $3}}' | awk -F '-' '{{print $2}}' | tr -s '\n' | tail -n +2 | sort >> {output}"
